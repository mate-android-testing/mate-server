import com.github.spotbugs.SpotBugsTask

buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "gradle.plugin.com.github.spotbugs:spotbugs-gradle-plugin:1.7.1"
    }
}

plugins {
    id 'java'
}

apply plugin: "com.github.spotbugs"
apply plugin: 'checkstyle'
apply plugin: 'pmd'

group 'org.mate'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

//create a single Jar with all dependencies
task fatJar(type: Jar) {
    manifest {
        attributes 'Implementation-Version': version,
                   'Main-Class': 'org.mate.Server2'
    }
    baseName = project.name + '-all'
    from {configurations.compile.collect{it.isDirectory() ? it : zipTree(it)}}
    with jar
}

repositories {
    mavenCentral()
}

dependencies {
    compile fileTree(dir: 'lib', include: '*.jar')
    testImplementation 'junit:junit:4.12'
}

test {
    useJUnit()

    maxHeapSize = '1G'
}

spotbugs {
    toolVersion = '3.1.12'
    ignoreFailures = true
    effort = "max"
    reportLevel = "high"
}

checkstyle {
    toolVersion = '8.20'
}

pmd {
    ignoreFailures true
}

tasks.withType(SpotBugsTask) {
    group = "verification"
    //classes = files("${project.buildDir}/intermediates/javac")
    ignoreFailures = true

    // configure automatically generated tasks
    reports {
        xml.enabled = false
        html.enabled = true
        html.destination file("$project.buildDir/reports/spotbugs/spotbugs.html")
    }
}

task checkstyle(type: Checkstyle) {
    configFile = rootProject.file("config/checkstyle/checkstyle.xml")
    //configProperties.checkstyleSuppressionsPath = file("$configPath/checkstyle/suppressions.xml").absolutePath
    source 'src'
    include '**/*.java'
    exclude '**/gen/**'
    reports {
        html.enabled = true
        xml.enabled = false
        html {
            destination file("$project.buildDir/reports/checkstyle/checkstyle.html")
        }
    }

    classpath = files()
}
